#!/usr/bin/env bash
set -e

HBP_VERSION="0.1.0"

# commands
command_help() {
    printf "HUGO Boilerplate
Developed by: Berkay Ã‡ubuk <berkay@berkaycubuk.com>
Version: $HBP_VERSION

Usage: hbp [command] [flags]

Commands:
    new         Create new HUGO project
    version     Print version information
    *           Print this page\n"
    exit 1
}

command_new() {
    project_path=$1

    # create empty HUGO project
    hugo new site $project_path 

    # folders
    mkdir -p "$project_path/assets/js"
    mkdir -p "$project_path/assets/scss"
    mkdir -p "$project_path/layouts/_default"
    mkdir -p "$project_path/layouts/partials"
    mkdir -p "$project_path/layouts/shortcodes"

    # files

    # main.js
    printf "// main.js" > "$project_path/assets/js/main.js" 
    # main.scss
    printf "// main.scss" > "$project_path/assets/scss/main.scss"
    # baseof.html
    printf "<!DOCTYPE html>
<html lang=\"en-US\">
<meta http-equiv=\"content-type\" content=\"text/html;charset=UTF-8\" />
{{- partial \"head.html\" -}}
<body>
    <!-- header -->
    {{- partial \"header.html\" -}}
    <!-- /header -->
    
    <!-- main -->
    {{- block \"main\" . }}{{- end }}
    <!-- /main -->

    <!-- footer -->
    {{- partial \"footer.html\" -}}
    <!-- /footer -->

    <!-- scripts -->
    {{- partial \"scripts.html\" -}}
    <!-- /scripts -->
</body>
</html>" > "$project_path/layouts/_default/baseof.html"
    # list.html
    printf "{{ define \"main\" }}

{{ end }}" > "$project_path/layouts/_default/list.html"
    # single.html
    printf "{{ define \"main\" }}

{{ end }}" > "$project_path/layouts/_default/single.html"
    # head.html
    printf "<head>
    <meta charset=\"UTF-8\" />
    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />
    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />
    {{/* Title */}}
    {{ if .IsHome -}}
        <title>{{ .Site.Title | emojify }}</title>
        <meta name=\"title\" content=\"{{ .Site.Title | emojify }}\" />
    {{- else -}}
        <title>{{ .Title | emojify }} &middot; {{ .Site.Title | emojify }}</title>
        <meta name=\"title\" content=\"{{ .Title | emojify }} &middot; {{ .Site.Title | emojify }}\" />
    {{- end }}
    {{ with .Params.Description -}}
        <meta name=\"description\" content=\"{{ . }}\" />
    {{- else -}}
        <meta name=\"description\" content=\"{{ $.Site.Params.Description }}\" />
    {{- end }}
    {{ with .Site.Params.keywords -}}
        <meta name=\"keywords\" content=\"{{ . }}\" />
    {{- end }}
    {{ with .Site.Params.robots -}}
        <meta name=\"robots\" content=\"{{ . }}\" />
    {{- end }}
    <link rel=\"canonical\" href=\"{{ .Permalink }}\" />
    {{/* Social */}}
    {{ template \"_internal/opengraph.html\" }}
    {{ template \"_internal/twitter_cards.html\" }}
    {{/* Styles */}}
    {{ \$styles := resources.Get \"scss/main.scss\" | resources.ToCSS | resources.Minify | resources.Fingerprint \"sha512\" }}
    <link
        rel=\"stylesheet\"
        type=\"text/css\"
        href=\"{{ \$styles.RelPermalink }}\"
        integrity=\"{{ \$styles.Data.Integrity }}\"
    />
</head>" > "$project_path/layouts/partials/head.html"
    # header.html
    printf "<header>

</header>" > "$project_path/layouts/partials/header.html"
    # footer.html
    printf "<footer>

</footer>" > "$project_path/layouts/partials/footer.html"
    # scripts.html
    printf "{{ \$scripts := resources.Get \"js/main.js\" | resources.Fingerprint \"sha512\" }}
<script src=\"{{ \$scripts.RelPermalink }}\" integrity=\"{{ \$scripts.Data.Integrity }}\"></script>" > "$project_path/layouts/partials/scripts.html"
    # index.html
    printf "{{ define \"main\" }}

{{ end }}" > "$project_path/layouts/index.html"
}

command_version() {
    printf "HUGO Boilerplate v$HBP_VERSION\n"
    exit 1
}

case "$1" in
    new|n)
        command_new "${@:2}"
        ;;
    version|v)
        command_version
        ;;
    *)
        command_help
        ;;
esac
